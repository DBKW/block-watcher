{"ast":null,"code":"var _jsxFileName = \"/Users/michaelmccoy/Documents/GitHub/blockexplorer/src/components/blocknumber/blocknumber.jsx\",\n  _s = $RefreshSig$();\nimport { Alchemy, Network } from 'alchemy-sdk';\nimport { useEffect, useState } from 'react';\nimport '/Users/michaelmccoy/Documents/GitHub/blockexplorer/src/App.css';\nimport { Table, Label } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Utils\n} = require(\"alchemy-sdk\");\nconst settings = {\n  apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n  network: Network.ETH_MAINNET\n};\n\n// In this week's lessons we used ethers.js. Here we are using the\n// Alchemy SDK is an umbrella library with several different packages.\n//\n// You can read more about the packages here:\n// https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\n\nconst alchemy = new Alchemy(settings);\nfunction App() {\n  _s();\n  const [blockNumber, setBlockNumber] = useState();\n  useEffect(() => {\n    async function getBlockNumber() {\n      setBlockNumber(await alchemy.core.getBlockNumber());\n    }\n    getBlockNumber();\n  });\n  const [gasPrice, setGasPrice] = useState();\n  useEffect(() => {\n    async function getGasPrice() {\n      setGasPrice(await alchemy.core.getGasPrice());\n    }\n    getGasPrice();\n  });\n  //const { id } = useParams();\n  const [recentTransaction, setRecentTransaction] = useState();\n  useEffect(() => {\n    async function getRecentTransaction() {\n      setRecentTransaction(await alchemy.core.getTransactionReceipt());\n    }\n    ;\n    getRecentTransaction();\n  });\n  const [value, setValue] = useState();\n  const [block, setBlock] = useState();\n  useEffect(() => {\n    async function getBlockWithTransactions() {\n      const latestBlock = await alchemy.core.getBlockWithTransactions(blockNumber);\n      const transactionHash = latestBlock.transactions[0];\n      const blockWithTransactions = await alchemy.core.getBlockWithTransactions(latestBlock.number);\n      setBlock(blockWithTransactions);\n      let value = null;\n      for (let i = 0; i < blockWithTransactions.transactions.length; i++) {\n        if (transactionHash === blockWithTransactions.transactions[i].hash) {\n          value = Utils.formatEther(blockWithTransactions.transactions[i].value);\n        }\n      }\n      if (value !== null) {\n        setValue(value);\n      }\n    }\n    getBlockWithTransactions();\n  }, [blockNumber, setValue]);\n\n  // use `block` and `value` in your component\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      fixed: true,\n      children: /*#__PURE__*/_jsxDEV(Table.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Table.Row, {\n          children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n            style: {\n              color: \"#1d6fa5\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \" Block Number: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              color: \"blue\",\n              children: \"Block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this), \" \", blockNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n            style: {\n              color: \"#1d6fa5\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \" Estimated Gas: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              color: \"blue\",\n              children: \"Gas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), \" \", parseInt(gasPrice) / 10 ** 18]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n            style: {\n              color: \"#1d6fa5\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \" Recent Transaction: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Label, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), \" \", recentTransaction]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              color: \"blue\",\n              children: \"Block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this), \" \", blockNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              color: \"blue\",\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), \" \", value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }, this);\n}\n_s(App, \"AHnKWyanj17Yg1dJiPXbQJraCS4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Alchemy","Network","useEffect","useState","Table","Label","Link","useParams","Utils","require","settings","apiKey","process","env","REACT_APP_ALCHEMY_API_KEY","network","ETH_MAINNET","alchemy","App","blockNumber","setBlockNumber","getBlockNumber","core","gasPrice","setGasPrice","getGasPrice","recentTransaction","setRecentTransaction","getRecentTransaction","getTransactionReceipt","value","setValue","block","setBlock","getBlockWithTransactions","latestBlock","transactionHash","transactions","blockWithTransactions","number","i","length","hash","formatEther","color","parseInt"],"sources":["/Users/michaelmccoy/Documents/GitHub/blockexplorer/src/components/blocknumber/blocknumber.jsx"],"sourcesContent":["import { Alchemy, Network } from 'alchemy-sdk';\nimport { useEffect, useState } from 'react';\nimport '/Users/michaelmccoy/Documents/GitHub/blockexplorer/src/App.css';\nimport {Table, Label } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nconst { Utils } = require(\"alchemy-sdk\");\nconst settings = {\n    apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n    network: Network.ETH_MAINNET,\n};\n\n// In this week's lessons we used ethers.js. Here we are using the\n// Alchemy SDK is an umbrella library with several different packages.\n//\n// You can read more about the packages here:\n// https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\n\nconst alchemy = new Alchemy(settings);\n\nfunction App() {\n    const [blockNumber, setBlockNumber] = useState();\n\t\tuseEffect(() => {\n\t\t\tasync function getBlockNumber() {\n\t\t\t\tsetBlockNumber(await alchemy.core.getBlockNumber());\n\t\t\t}\n\t\tgetBlockNumber();\n        });\n\n    const [gasPrice, setGasPrice] = useState();\n        useEffect(() => { \n            async function getGasPrice() {\n                setGasPrice(await alchemy.core.getGasPrice());\n            }\n        getGasPrice();\n        }); \n    //const { id } = useParams();\n    const [recentTransaction, setRecentTransaction] = useState();\n        useEffect(() => {\n            async function getRecentTransaction() { \n                setRecentTransaction(await alchemy.core.getTransactionReceipt());\n            };\n        getRecentTransaction();\n        });\n    \n    const [value, setValue] = useState();\n    const [block, setBlock] = useState();\n        \n        useEffect(() => {\n          async function getBlockWithTransactions() {\n            const latestBlock = await alchemy.core.getBlockWithTransactions(blockNumber);\n            const transactionHash = latestBlock.transactions[0];\n            const blockWithTransactions = await alchemy.core.getBlockWithTransactions(latestBlock.number);\n            setBlock(blockWithTransactions);\n        \n            let value = null;\n            for (let i = 0; i < blockWithTransactions.transactions.length; i++) {\n              if (transactionHash === blockWithTransactions.transactions[i].hash) {\n                value = Utils.formatEther(blockWithTransactions.transactions[i].value);\n              }\n            }\n        \n            if (value !== null) {\n              setValue(value);\n            }\n          }\n        \n          getBlockWithTransactions();\n        }, [blockNumber, setValue]);\n        \n        // use `block` and `value` in your component\n        \n    return (\n            <div> \n                <Table fixed>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.Cell style={{ color: \"#1d6fa5\" }}>\n                                <h4> Block Number: </h4>\n                            </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>\n                                <Label color=\"blue\">Block</Label> {blockNumber}\n                            </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell style={{ color: \"#1d6fa5\" }}>\n                                <h4> Estimated Gas: </h4>\n                            </Table.Cell>\n                        </Table.Row> \n                        <Table.Row>\n                            <Table.Cell>\n                                <Label color=\"blue\">Gas</Label> {parseInt(gasPrice)/10**18}\n                            </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell style={{ color: \"#1d6fa5\" }}>\n                                <h4> Recent Transaction: </h4>\n                                <Label></Label> {recentTransaction}\n                            </Table.Cell> \n                        </Table.Row> \n                        <Table.Row>\n                            <Table.Cell>\n                                <Label color=\"blue\">Block</Label> {blockNumber}\n                            </Table.Cell>\n                            <Table.Cell>\n                                <Label color=\"blue\">Value</Label> {value}\n                            </Table.Cell>\n                        </Table.Row>\n                    </Table.Header>    \n                </Table>\n            </div>\n        );\n    }\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}